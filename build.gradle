plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.stamptour'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //스프링 부트 웹 어플리케이션 개발 구성 요소 : spring MVC, RESTful 웹 서비스, Tomcat(내장 웹 서비스) 등 포함
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //thymeleaf : 서버 사이드 템플릿 렌더링 지원. HTML을 기반으로 동적 웹 페이지 생성
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //jpa 연동 : 데이터베이스와 상호작용 간단히 하게 해줌
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //데이터 유효성 검사 : 폼 입력 데이터 유효성 검사에 유용
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JWT 생성, 파싱 및 검증을 지원
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // Jakarta EE 의존성
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'


    //jdbc 및 mysql 연동
    runtimeOnly 'com.mysql:mysql-connector-j'

    //lombok : 반복되는 코드를 줄이기 위해 사용. getter, setter, toString 메소드 자동 생성 가능
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //DevTools : 개발 과정에서 유용한 도구들을 제공. 코드 변경 시 애플리케이션을 자동으로 재시작하는 기능 등. 개발 단계에서만 사용.
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //junit : junit을 활용한 테스트
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //spring boot 애플리케이션 테스트에 필요한 다양한 테스트 프레임워크와 라이브러리 제공 : JUnit, Mockito, Spring TestContext 등 포함
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
