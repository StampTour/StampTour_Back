plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.stamptour'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 스프링 부트 웹 애플리케이션 개발 구성 요소: Spring MVC, RESTful 웹 서비스, 내장 Tomcat 웹 서버 등 포함
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Thymeleaf 템플릿 엔진: 서버 사이드에서 동적 웹 페이지를 생성하고 렌더링하는 데 사용
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Spring Data JPA: JPA(Java Persistence API)와 함께 데이터베이스와 상호작용하기 위한 구성 요소
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Validation: 데이터 유효성 검사(예: 폼 입력 데이터의 유효성 검사)를 지원하는 구성 요소
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JSON Web Token(JWT): JWT 생성, 파싱, 서명 검증을 지원하는 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring Security: 애플리케이션에 인증 및 권한 부여 기능을 추가하는 구성 요소
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // MySQL 데이터베이스 드라이버: MySQL 데이터베이스와 연결하기 위한 JDBC 드라이버
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Lombok: 반복되는 코드(예: getter, setter 메소드 등)를 자동으로 생성해주는 라이브러리
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Boot DevTools: 애플리케이션 개발 중 편리한 도구를 제공, 코드 변경 시 자동 재시작 등의 기능 포함 (개발 단계에서만 사용)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // JUnit 플랫폼 런처: JUnit 테스트 실행을 위한 런처
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Spring Boot 테스트: Spring Boot 애플리케이션을 테스트하기 위한 다양한 테스트 프레임워크와 라이브러리 포함
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
